"use strict";

var _interopRequireWildcard = require("babel-runtime/helpers/interop-require-wildcard")["default"];
var _babelTypes = require("babel-types");
var t = _interopRequireWildcard(_babelTypes);
var each = require("lodash/collection/each");
var ids = require("../../../lib/ids");

exports.__esModule = true;

exports["default"] = function () {
  // console.log(t.TYPES);
  var g = {};
  g["visitor"] = {};

  var mytypes = [
    'AssignmentExpression',
    'Directive',
    'CallExpression',
    'VariableDeclaration',
    'ImportDeclaration',
    'DeclareVariable',
    'ImportDefaultSpecifier',
    'ImportNamespaceSpecifier',
    'ImportSpecifier',
    'StringLiteral',
    'Statement',
    'Declaration',
    'LVal',
    'Literal',

  ];
  each(t.TYPES, function (v) {
    if (
      (v === "NumberLiteral") || 
      (v === "RegexLiteral") || 
      (v === "BlockScoped") || 
      (v === "User") || 
      (v === "Generated") || 
      (v === "Pure") || 
      (v === 'Referenced')) {
      return;
    }
    // console.log("'"+ v + "',");
    g["visitor"][v] = function (path, file) {
      console.log(v);
      console.log(path.node.name);
    };
  });
  return g;
  return {
    visitor: {
      Identifier: function Identifier (path, file) {
        console.log("Identifier");

        console.log(path.node);
      },
      Var: function Var (path, file) {
        console.log("Var");
        // console.log(path.node);
      },
      File: function File (path, file) {
        console.log("File");
        // console.log(path.node);
      },
      Program: { 
        enter: function ProgramEnter (path, file) {

        },
      exit: function ProgramExit (path, file) {
        console.log("Program exit");
        // console.log(file);
        // console.log(path.node);
      } },
      CallExpression: function CallExpression (path, file) {
        if (path.node.callee.name === "require") {
          var req = path.node.arguments[0].value;
          var rewrite = ids.get_require(req);
          path.node.arguments[0].value = rewrite;
        }
      }
    }
  };
};

module.exports = exports["default"];
// console.log(t.TYPES);